#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PhatTrienBachHoaXanh")]
	public partial class LinqBHXDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBangGia(BangGia instance);
    partial void UpdateBangGia(BangGia instance);
    partial void DeleteBangGia(BangGia instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertBangTraDoi(BangTraDoi instance);
    partial void UpdateBangTraDoi(BangTraDoi instance);
    partial void DeleteBangTraDoi(BangTraDoi instance);
    partial void InsertChiTietDoiTra(ChiTietDoiTra instance);
    partial void UpdateChiTietDoiTra(ChiTietDoiTra instance);
    partial void DeleteChiTietDoiTra(ChiTietDoiTra instance);
    partial void InsertChiTietHoaDon(ChiTietHoaDon instance);
    partial void UpdateChiTietHoaDon(ChiTietHoaDon instance);
    partial void DeleteChiTietHoaDon(ChiTietHoaDon instance);
    partial void InsertChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void UpdateChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void DeleteChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertHSDSanPham(HSDSanPham instance);
    partial void UpdateHSDSanPham(HSDSanPham instance);
    partial void DeleteHSDSanPham(HSDSanPham instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertManHinh(ManHinh instance);
    partial void UpdateManHinh(ManHinh instance);
    partial void DeleteManHinh(ManHinh instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNhomNhanVien(NhomNhanVien instance);
    partial void UpdateNhomNhanVien(NhomNhanVien instance);
    partial void DeleteNhomNhanVien(NhomNhanVien instance);
    partial void InsertPhanQuyenNhanVien(PhanQuyenNhanVien instance);
    partial void UpdatePhanQuyenNhanVien(PhanQuyenNhanVien instance);
    partial void DeletePhanQuyenNhanVien(PhanQuyenNhanVien instance);
    partial void InsertPhanQuyenNhom(PhanQuyenNhom instance);
    partial void UpdatePhanQuyenNhom(PhanQuyenNhom instance);
    partial void DeletePhanQuyenNhom(PhanQuyenNhom instance);
    partial void InsertPhieuNhap(PhieuNhap instance);
    partial void UpdatePhieuNhap(PhieuNhap instance);
    partial void DeletePhieuNhap(PhieuNhap instance);
    partial void InsertBangHuy(BangHuy instance);
    partial void UpdateBangHuy(BangHuy instance);
    partial void DeleteBangHuy(BangHuy instance);
    partial void InsertChiTietHuy(ChiTietHuy instance);
    partial void UpdateChiTietHuy(ChiTietHuy instance);
    partial void DeleteChiTietHuy(ChiTietHuy instance);
    #endregion
		
		public LinqBHXDataContext() : 
				base(global::DAL.Properties.Settings.Default.PhatTrienBachHoaXanhConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqBHXDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqBHXDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqBHXDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqBHXDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BangGia> BangGias
		{
			get
			{
				return this.GetTable<BangGia>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<BangTraDoi> BangTraDois
		{
			get
			{
				return this.GetTable<BangTraDoi>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDoiTra> ChiTietDoiTras
		{
			get
			{
				return this.GetTable<ChiTietDoiTra>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this.GetTable<ChiTietHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this.GetTable<ChiTietPhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<HSDSanPham> HSDSanPhams
		{
			get
			{
				return this.GetTable<HSDSanPham>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<ManHinh> ManHinhs
		{
			get
			{
				return this.GetTable<ManHinh>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhomNhanVien> NhomNhanViens
		{
			get
			{
				return this.GetTable<NhomNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyenNhanVien> PhanQuyenNhanViens
		{
			get
			{
				return this.GetTable<PhanQuyenNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyenNhom> PhanQuyenNhoms
		{
			get
			{
				return this.GetTable<PhanQuyenNhom>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this.GetTable<PhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<BangHuy> BangHuys
		{
			get
			{
				return this.GetTable<BangHuy>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHuy> ChiTietHuys
		{
			get
			{
				return this.GetTable<ChiTietHuy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangGia")]
	public partial class BangGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private System.Nullable<double> _GiaBan;
		
		private System.Nullable<double> _GiaKhuyenMai;
		
		private string _TinhTrangGiam;
		
		private System.DateTime _NgayAD;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnGiaBanChanging(System.Nullable<double> value);
    partial void OnGiaBanChanged();
    partial void OnGiaKhuyenMaiChanging(System.Nullable<double> value);
    partial void OnGiaKhuyenMaiChanged();
    partial void OnTinhTrangGiamChanging(string value);
    partial void OnTinhTrangGiamChanged();
    partial void OnNgayADChanging(System.DateTime value);
    partial void OnNgayADChanged();
    #endregion
		
		public BangGia()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Float")]
		public System.Nullable<double> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaKhuyenMai", DbType="Float")]
		public System.Nullable<double> GiaKhuyenMai
		{
			get
			{
				return this._GiaKhuyenMai;
			}
			set
			{
				if ((this._GiaKhuyenMai != value))
				{
					this.OnGiaKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._GiaKhuyenMai = value;
					this.SendPropertyChanged("GiaKhuyenMai");
					this.OnGiaKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangGiam", DbType="NVarChar(MAX)")]
		public string TinhTrangGiam
		{
			get
			{
				return this._TinhTrangGiam;
			}
			set
			{
				if ((this._TinhTrangGiam != value))
				{
					this.OnTinhTrangGiamChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangGiam = value;
					this.SendPropertyChanged("TinhTrangGiam");
					this.OnTinhTrangGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayAD", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayAD
		{
			get
			{
				return this._NgayAD;
			}
			set
			{
				if ((this._NgayAD != value))
				{
					this.OnNgayADChanging(value);
					this.SendPropertyChanging();
					this._NgayAD = value;
					this.SendPropertyChanged("NgayAD");
					this.OnNgayADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BangGia", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.BangGias.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.BangGias.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _TenSP;
		
		private string _HinhAnh;
		
		private string _DVT;
		
		private string _MaLoaiSP;
		
		private System.Nullable<int> _TongSLTon;
		
		private EntitySet<BangGia> _BangGias;
		
		private EntitySet<ChiTietDoiTra> _ChiTietDoiTras;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntitySet<ChiTietPhieuNhap> _ChiTietPhieuNhaps;
		
		private EntitySet<HSDSanPham> _HSDSanPhams;
		
		private EntitySet<ChiTietHuy> _ChiTietHuys;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnTongSLTonChanging(System.Nullable<int> value);
    partial void OnTongSLTonChanged();
    #endregion
		
		public SanPham()
		{
			this._BangGias = new EntitySet<BangGia>(new Action<BangGia>(this.attach_BangGias), new Action<BangGia>(this.detach_BangGias));
			this._ChiTietDoiTras = new EntitySet<ChiTietDoiTra>(new Action<ChiTietDoiTra>(this.attach_ChiTietDoiTras), new Action<ChiTietDoiTra>(this.detach_ChiTietDoiTras));
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._ChiTietPhieuNhaps = new EntitySet<ChiTietPhieuNhap>(new Action<ChiTietPhieuNhap>(this.attach_ChiTietPhieuNhaps), new Action<ChiTietPhieuNhap>(this.detach_ChiTietPhieuNhaps));
			this._HSDSanPhams = new EntitySet<HSDSanPham>(new Action<HSDSanPham>(this.attach_HSDSanPhams), new Action<HSDSanPham>(this.detach_HSDSanPhams));
			this._ChiTietHuys = new EntitySet<ChiTietHuy>(new Action<ChiTietHuy>(this.attach_ChiTietHuys), new Action<ChiTietHuy>(this.detach_ChiTietHuys));
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(50)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(50)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(10)")]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSLTon", DbType="Int")]
		public System.Nullable<int> TongSLTon
		{
			get
			{
				return this._TongSLTon;
			}
			set
			{
				if ((this._TongSLTon != value))
				{
					this.OnTongSLTonChanging(value);
					this.SendPropertyChanging();
					this._TongSLTon = value;
					this.SendPropertyChanged("TongSLTon");
					this.OnTongSLTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BangGia", Storage="_BangGias", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<BangGia> BangGias
		{
			get
			{
				return this._BangGias;
			}
			set
			{
				this._BangGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDoiTra", Storage="_ChiTietDoiTras", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<ChiTietDoiTra> ChiTietDoiTras
		{
			get
			{
				return this._ChiTietDoiTras;
			}
			set
			{
				this._ChiTietDoiTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuNhap", Storage="_ChiTietPhieuNhaps", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this._ChiTietPhieuNhaps;
			}
			set
			{
				this._ChiTietPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HSDSanPham", Storage="_HSDSanPhams", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<HSDSanPham> HSDSanPhams
		{
			get
			{
				return this._HSDSanPhams;
			}
			set
			{
				this._HSDSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHuy", Storage="_ChiTietHuys", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<ChiTietHuy> ChiTietHuys
		{
			get
			{
				return this._ChiTietHuys;
			}
			set
			{
				this._ChiTietHuys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangGias(BangGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_BangGias(BangGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietDoiTras(ChiTietDoiTra entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDoiTras(ChiTietDoiTra entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_HSDSanPhams(HSDSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_HSDSanPhams(HSDSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietHuys(ChiTietHuy entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietHuys(ChiTietHuy entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangTraDoi")]
	public partial class BangTraDoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDoi;
		
		private string _MaNV;
		
		private string _MaHD;
		
		private System.Nullable<System.DateTime> _NgayDoiTra;
		
		private EntitySet<ChiTietDoiTra> _ChiTietDoiTras;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDoiChanging(string value);
    partial void OnMaDoiChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnNgayDoiTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDoiTraChanged();
    #endregion
		
		public BangTraDoi()
		{
			this._ChiTietDoiTras = new EntitySet<ChiTietDoiTra>(new Action<ChiTietDoiTra>(this.attach_ChiTietDoiTras), new Action<ChiTietDoiTra>(this.detach_ChiTietDoiTras));
			this._HoaDon = default(EntityRef<HoaDon>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDoi
		{
			get
			{
				return this._MaDoi;
			}
			set
			{
				if ((this._MaDoi != value))
				{
					this.OnMaDoiChanging(value);
					this.SendPropertyChanging();
					this._MaDoi = value;
					this.SendPropertyChanged("MaDoi");
					this.OnMaDoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(10)")]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDoiTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDoiTra
		{
			get
			{
				return this._NgayDoiTra;
			}
			set
			{
				if ((this._NgayDoiTra != value))
				{
					this.OnNgayDoiTraChanging(value);
					this.SendPropertyChanging();
					this._NgayDoiTra = value;
					this.SendPropertyChanged("NgayDoiTra");
					this.OnNgayDoiTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangTraDoi_ChiTietDoiTra", Storage="_ChiTietDoiTras", ThisKey="MaDoi", OtherKey="MaDoi")]
		public EntitySet<ChiTietDoiTra> ChiTietDoiTras
		{
			get
			{
				return this._ChiTietDoiTras;
			}
			set
			{
				this._ChiTietDoiTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_BangTraDoi", Storage="_HoaDon", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.BangTraDois.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.BangTraDois.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangTraDoi", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.BangTraDois.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.BangTraDois.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDoiTras(ChiTietDoiTra entity)
		{
			this.SendPropertyChanging();
			entity.BangTraDoi = this;
		}
		
		private void detach_ChiTietDoiTras(ChiTietDoiTra entity)
		{
			this.SendPropertyChanging();
			entity.BangTraDoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDoiTra")]
	public partial class ChiTietDoiTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDoi;
		
		private string _MaSP;
		
		private System.Nullable<int> _SoLuongDoiTra;
		
		private EntityRef<BangTraDoi> _BangTraDoi;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDoiChanging(string value);
    partial void OnMaDoiChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongDoiTraChanging(System.Nullable<int> value);
    partial void OnSoLuongDoiTraChanged();
    #endregion
		
		public ChiTietDoiTra()
		{
			this._BangTraDoi = default(EntityRef<BangTraDoi>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDoi
		{
			get
			{
				return this._MaDoi;
			}
			set
			{
				if ((this._MaDoi != value))
				{
					if (this._BangTraDoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDoiChanging(value);
					this.SendPropertyChanging();
					this._MaDoi = value;
					this.SendPropertyChanged("MaDoi");
					this.OnMaDoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDoiTra", DbType="Int")]
		public System.Nullable<int> SoLuongDoiTra
		{
			get
			{
				return this._SoLuongDoiTra;
			}
			set
			{
				if ((this._SoLuongDoiTra != value))
				{
					this.OnSoLuongDoiTraChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDoiTra = value;
					this.SendPropertyChanged("SoLuongDoiTra");
					this.OnSoLuongDoiTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangTraDoi_ChiTietDoiTra", Storage="_BangTraDoi", ThisKey="MaDoi", OtherKey="MaDoi", IsForeignKey=true)]
		public BangTraDoi BangTraDoi
		{
			get
			{
				return this._BangTraDoi.Entity;
			}
			set
			{
				BangTraDoi previousValue = this._BangTraDoi.Entity;
				if (((previousValue != value) 
							|| (this._BangTraDoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BangTraDoi.Entity = null;
						previousValue.ChiTietDoiTras.Remove(this);
					}
					this._BangTraDoi.Entity = value;
					if ((value != null))
					{
						value.ChiTietDoiTras.Add(this);
						this._MaDoi = value.MaDoi;
					}
					else
					{
						this._MaDoi = default(string);
					}
					this.SendPropertyChanged("BangTraDoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDoiTra", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDoiTras.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDoiTras.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDon")]
	public partial class ChiTietHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaSP;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _GiaBan;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<HoaDon> _HoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaBanChanging(System.Nullable<double> value);
    partial void OnGiaBanChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public ChiTietHoaDon()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._HoaDon = default(EntityRef<HoaDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Float")]
		public System.Nullable<double> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDon", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_HoaDon", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuNhap")]
	public partial class ChiTietPhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPN;
		
		private string _MaSP;
		
		private System.Nullable<int> _SoLuongNhap;
		
		private string _GhiChu;
		
		private System.Nullable<System.DateTime> _NSX;
		
		private System.Nullable<System.DateTime> _HSD;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<PhieuNhap> _PhieuNhap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPNChanging(string value);
    partial void OnMaPNChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongNhapChanging(System.Nullable<int> value);
    partial void OnSoLuongNhapChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnNSXChanging(System.Nullable<System.DateTime> value);
    partial void OnNSXChanged();
    partial void OnHSDChanging(System.Nullable<System.DateTime> value);
    partial void OnHSDChanged();
    #endregion
		
		public ChiTietPhieuNhap()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._PhieuNhap = default(EntityRef<PhieuNhap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPN
		{
			get
			{
				return this._MaPN;
			}
			set
			{
				if ((this._MaPN != value))
				{
					if (this._PhieuNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPNChanging(value);
					this.SendPropertyChanging();
					this._MaPN = value;
					this.SendPropertyChanged("MaPN");
					this.OnMaPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongNhap", DbType="Int")]
		public System.Nullable<int> SoLuongNhap
		{
			get
			{
				return this._SoLuongNhap;
			}
			set
			{
				if ((this._SoLuongNhap != value))
				{
					this.OnSoLuongNhapChanging(value);
					this.SendPropertyChanging();
					this._SoLuongNhap = value;
					this.SendPropertyChanged("SoLuongNhap");
					this.OnSoLuongNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(MAX)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSX", DbType="Date")]
		public System.Nullable<System.DateTime> NSX
		{
			get
			{
				return this._NSX;
			}
			set
			{
				if ((this._NSX != value))
				{
					this.OnNSXChanging(value);
					this.SendPropertyChanging();
					this._NSX = value;
					this.SendPropertyChanged("NSX");
					this.OnNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSD", DbType="Date")]
		public System.Nullable<System.DateTime> HSD
		{
			get
			{
				return this._HSD;
			}
			set
			{
				if ((this._HSD != value))
				{
					this.OnHSDChanging(value);
					this.SendPropertyChanging();
					this._HSD = value;
					this.SendPropertyChanged("HSD");
					this.OnHSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuNhap", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietPhieuNhaps.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhaps.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChiTietPhieuNhap", Storage="_PhieuNhap", ThisKey="MaPN", OtherKey="MaPN", IsForeignKey=true)]
		public PhieuNhap PhieuNhap
		{
			get
			{
				return this._PhieuNhap.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap.Entity = null;
						previousValue.ChiTietPhieuNhaps.Remove(this);
					}
					this._PhieuNhap.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhaps.Add(this);
						this._MaPN = value.MaPN;
					}
					else
					{
						this._MaPN = default(string);
					}
					this.SendPropertyChanged("PhieuNhap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<double> _TongTien;
		
		private string _TrinhTrangTT;
		
		private string _MaNV;
		
		private EntitySet<BangTraDoi> _BangTraDois;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnTrinhTrangTTChanging(string value);
    partial void OnTrinhTrangTTChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public HoaDon()
		{
			this._BangTraDois = new EntitySet<BangTraDoi>(new Action<BangTraDoi>(this.attach_BangTraDois), new Action<BangTraDoi>(this.detach_BangTraDois));
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrinhTrangTT", DbType="NVarChar(MAX)")]
		public string TrinhTrangTT
		{
			get
			{
				return this._TrinhTrangTT;
			}
			set
			{
				if ((this._TrinhTrangTT != value))
				{
					this.OnTrinhTrangTTChanging(value);
					this.SendPropertyChanging();
					this._TrinhTrangTT = value;
					this.SendPropertyChanged("TrinhTrangTT");
					this.OnTrinhTrangTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_BangTraDoi", Storage="_BangTraDois", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<BangTraDoi> BangTraDois
		{
			get
			{
				return this._BangTraDois;
			}
			set
			{
				this._BangTraDois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangTraDois(BangTraDoi entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_BangTraDois(BangTraDoi entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HSDSanPham")]
	public partial class HSDSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private System.DateTime _HSD;
		
		private System.Nullable<int> _SoLuong;
		
		private string _TinhTrangSP;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnHSDChanging(System.DateTime value);
    partial void OnHSDChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTinhTrangSPChanging(string value);
    partial void OnTinhTrangSPChanged();
    #endregion
		
		public HSDSanPham()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSD", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime HSD
		{
			get
			{
				return this._HSD;
			}
			set
			{
				if ((this._HSD != value))
				{
					this.OnHSDChanging(value);
					this.SendPropertyChanging();
					this._HSD = value;
					this.SendPropertyChanged("HSD");
					this.OnHSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangSP", DbType="NVarChar(MAX)")]
		public string TinhTrangSP
		{
			get
			{
				return this._TinhTrangSP;
			}
			set
			{
				if ((this._TinhTrangSP != value))
				{
					this.OnTinhTrangSPChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangSP = value;
					this.SendPropertyChanged("TinhTrangSP");
					this.OnTinhTrangSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HSDSanPham", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.HSDSanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.HSDSanPhams.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiSP;
		
		private string _TenLoaiSP;
		
		private string _GhiChu;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NVarChar(50)")]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManHinh")]
	public partial class ManHinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMH;
		
		private string _TenMH;
		
		private EntitySet<PhanQuyenNhom> _PhanQuyenNhoms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    #endregion
		
		public ManHinh()
		{
			this._PhanQuyenNhoms = new EntitySet<PhanQuyenNhom>(new Action<PhanQuyenNhom>(this.attach_PhanQuyenNhoms), new Action<PhanQuyenNhom>(this.detach_PhanQuyenNhoms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(MAX)")]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyenNhom", Storage="_PhanQuyenNhoms", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<PhanQuyenNhom> PhanQuyenNhoms
		{
			get
			{
				return this._PhanQuyenNhoms;
			}
			set
			{
				this._PhanQuyenNhoms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyenNhoms(PhanQuyenNhom entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = this;
		}
		
		private void detach_PhanQuyenNhoms(PhanQuyenNhom entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _Email;
		
		private string _MatKhau;
		
		private string _HinhNV;
		
		private System.Nullable<System.DateTime> _NgayVL;
		
		private string _CMT;
		
		private EntitySet<BangTraDoi> _BangTraDois;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<PhanQuyenNhanVien> _PhanQuyenNhanViens;
		
		private EntitySet<PhieuNhap> _PhieuNhaps;
		
		private EntitySet<BangHuy> _BangHuys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHinhNVChanging(string value);
    partial void OnHinhNVChanged();
    partial void OnNgayVLChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVLChanged();
    partial void OnCMTChanging(string value);
    partial void OnCMTChanged();
    #endregion
		
		public NhanVien()
		{
			this._BangTraDois = new EntitySet<BangTraDoi>(new Action<BangTraDoi>(this.attach_BangTraDois), new Action<BangTraDoi>(this.detach_BangTraDois));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._PhanQuyenNhanViens = new EntitySet<PhanQuyenNhanVien>(new Action<PhanQuyenNhanVien>(this.attach_PhanQuyenNhanViens), new Action<PhanQuyenNhanVien>(this.detach_PhanQuyenNhanViens));
			this._PhieuNhaps = new EntitySet<PhieuNhap>(new Action<PhieuNhap>(this.attach_PhieuNhaps), new Action<PhieuNhap>(this.detach_PhieuNhaps));
			this._BangHuys = new EntitySet<BangHuy>(new Action<BangHuy>(this.attach_BangHuys), new Action<BangHuy>(this.detach_BangHuys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(50)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(10)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhNV", DbType="Char(10)")]
		public string HinhNV
		{
			get
			{
				return this._HinhNV;
			}
			set
			{
				if ((this._HinhNV != value))
				{
					this.OnHinhNVChanging(value);
					this.SendPropertyChanging();
					this._HinhNV = value;
					this.SendPropertyChanged("HinhNV");
					this.OnHinhNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayVL", DbType="Date")]
		public System.Nullable<System.DateTime> NgayVL
		{
			get
			{
				return this._NgayVL;
			}
			set
			{
				if ((this._NgayVL != value))
				{
					this.OnNgayVLChanging(value);
					this.SendPropertyChanging();
					this._NgayVL = value;
					this.SendPropertyChanged("NgayVL");
					this.OnNgayVLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMT", DbType="Char(9)")]
		public string CMT
		{
			get
			{
				return this._CMT;
			}
			set
			{
				if ((this._CMT != value))
				{
					this.OnCMTChanging(value);
					this.SendPropertyChanging();
					this._CMT = value;
					this.SendPropertyChanged("CMT");
					this.OnCMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangTraDoi", Storage="_BangTraDois", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<BangTraDoi> BangTraDois
		{
			get
			{
				return this._BangTraDois;
			}
			set
			{
				this._BangTraDois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanQuyenNhanVien", Storage="_PhanQuyenNhanViens", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhanQuyenNhanVien> PhanQuyenNhanViens
		{
			get
			{
				return this._PhanQuyenNhanViens;
			}
			set
			{
				this._PhanQuyenNhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhap", Storage="_PhieuNhaps", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this._PhieuNhaps;
			}
			set
			{
				this._PhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangHuy", Storage="_BangHuys", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<BangHuy> BangHuys
		{
			get
			{
				return this._BangHuys;
			}
			set
			{
				this._BangHuys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangTraDois(BangTraDoi entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_BangTraDois(BangTraDoi entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhanQuyenNhanViens(PhanQuyenNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhanQuyenNhanViens(PhanQuyenNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_BangHuys(BangHuy entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_BangHuys(BangHuy entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomNhanVien")]
	public partial class NhomNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhomNV;
		
		private string _TenNhomNV;
		
		private EntitySet<PhanQuyenNhanVien> _PhanQuyenNhanViens;
		
		private EntitySet<PhanQuyenNhom> _PhanQuyenNhoms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomNVChanging(string value);
    partial void OnMaNhomNVChanged();
    partial void OnTenNhomNVChanging(string value);
    partial void OnTenNhomNVChanged();
    #endregion
		
		public NhomNhanVien()
		{
			this._PhanQuyenNhanViens = new EntitySet<PhanQuyenNhanVien>(new Action<PhanQuyenNhanVien>(this.attach_PhanQuyenNhanViens), new Action<PhanQuyenNhanVien>(this.detach_PhanQuyenNhanViens));
			this._PhanQuyenNhoms = new EntitySet<PhanQuyenNhom>(new Action<PhanQuyenNhom>(this.attach_PhanQuyenNhoms), new Action<PhanQuyenNhom>(this.detach_PhanQuyenNhoms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhomNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhomNV
		{
			get
			{
				return this._MaNhomNV;
			}
			set
			{
				if ((this._MaNhomNV != value))
				{
					this.OnMaNhomNVChanging(value);
					this.SendPropertyChanging();
					this._MaNhomNV = value;
					this.SendPropertyChanged("MaNhomNV");
					this.OnMaNhomNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhomNV", DbType="NVarChar(MAX)")]
		public string TenNhomNV
		{
			get
			{
				return this._TenNhomNV;
			}
			set
			{
				if ((this._TenNhomNV != value))
				{
					this.OnTenNhomNVChanging(value);
					this.SendPropertyChanging();
					this._TenNhomNV = value;
					this.SendPropertyChanged("TenNhomNV");
					this.OnTenNhomNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_PhanQuyenNhanVien", Storage="_PhanQuyenNhanViens", ThisKey="MaNhomNV", OtherKey="MaNhomNV")]
		public EntitySet<PhanQuyenNhanVien> PhanQuyenNhanViens
		{
			get
			{
				return this._PhanQuyenNhanViens;
			}
			set
			{
				this._PhanQuyenNhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_PhanQuyenNhom", Storage="_PhanQuyenNhoms", ThisKey="MaNhomNV", OtherKey="MaNhomNV")]
		public EntitySet<PhanQuyenNhom> PhanQuyenNhoms
		{
			get
			{
				return this._PhanQuyenNhoms;
			}
			set
			{
				this._PhanQuyenNhoms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyenNhanViens(PhanQuyenNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = this;
		}
		
		private void detach_PhanQuyenNhanViens(PhanQuyenNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = null;
		}
		
		private void attach_PhanQuyenNhoms(PhanQuyenNhom entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = this;
		}
		
		private void detach_PhanQuyenNhoms(PhanQuyenNhom entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyenNhanVien")]
	public partial class PhanQuyenNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhomNV;
		
		private string _MaNV;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<NhomNhanVien> _NhomNhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomNVChanging(string value);
    partial void OnMaNhomNVChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public PhanQuyenNhanVien()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			this._NhomNhanVien = default(EntityRef<NhomNhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhomNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhomNV
		{
			get
			{
				return this._MaNhomNV;
			}
			set
			{
				if ((this._MaNhomNV != value))
				{
					if (this._NhomNhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomNVChanging(value);
					this.SendPropertyChanging();
					this._MaNhomNV = value;
					this.SendPropertyChanged("MaNhomNV");
					this.OnMaNhomNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanQuyenNhanVien", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhanQuyenNhanViens.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhanQuyenNhanViens.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_PhanQuyenNhanVien", Storage="_NhomNhanVien", ThisKey="MaNhomNV", OtherKey="MaNhomNV", IsForeignKey=true)]
		public NhomNhanVien NhomNhanVien
		{
			get
			{
				return this._NhomNhanVien.Entity;
			}
			set
			{
				NhomNhanVien previousValue = this._NhomNhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhomNhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomNhanVien.Entity = null;
						previousValue.PhanQuyenNhanViens.Remove(this);
					}
					this._NhomNhanVien.Entity = value;
					if ((value != null))
					{
						value.PhanQuyenNhanViens.Add(this);
						this._MaNhomNV = value.MaNhomNV;
					}
					else
					{
						this._MaNhomNV = default(string);
					}
					this.SendPropertyChanged("NhomNhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyenNhom")]
	public partial class PhanQuyenNhom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhomNV;
		
		private string _MaMH;
		
		private System.Nullable<bool> _QuyenHan;
		
		private EntityRef<ManHinh> _ManHinh;
		
		private EntityRef<NhomNhanVien> _NhomNhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomNVChanging(string value);
    partial void OnMaNhomNVChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnQuyenHanChanging(System.Nullable<bool> value);
    partial void OnQuyenHanChanged();
    #endregion
		
		public PhanQuyenNhom()
		{
			this._ManHinh = default(EntityRef<ManHinh>);
			this._NhomNhanVien = default(EntityRef<NhomNhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhomNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhomNV
		{
			get
			{
				return this._MaNhomNV;
			}
			set
			{
				if ((this._MaNhomNV != value))
				{
					if (this._NhomNhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomNVChanging(value);
					this.SendPropertyChanging();
					this._MaNhomNV = value;
					this.SendPropertyChanged("MaNhomNV");
					this.OnMaNhomNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._ManHinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuyenHan", DbType="Bit")]
		public System.Nullable<bool> QuyenHan
		{
			get
			{
				return this._QuyenHan;
			}
			set
			{
				if ((this._QuyenHan != value))
				{
					this.OnQuyenHanChanging(value);
					this.SendPropertyChanging();
					this._QuyenHan = value;
					this.SendPropertyChanged("QuyenHan");
					this.OnQuyenHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyenNhom", Storage="_ManHinh", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public ManHinh ManHinh
		{
			get
			{
				return this._ManHinh.Entity;
			}
			set
			{
				ManHinh previousValue = this._ManHinh.Entity;
				if (((previousValue != value) 
							|| (this._ManHinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ManHinh.Entity = null;
						previousValue.PhanQuyenNhoms.Remove(this);
					}
					this._ManHinh.Entity = value;
					if ((value != null))
					{
						value.PhanQuyenNhoms.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("ManHinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_PhanQuyenNhom", Storage="_NhomNhanVien", ThisKey="MaNhomNV", OtherKey="MaNhomNV", IsForeignKey=true)]
		public NhomNhanVien NhomNhanVien
		{
			get
			{
				return this._NhomNhanVien.Entity;
			}
			set
			{
				NhomNhanVien previousValue = this._NhomNhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhomNhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomNhanVien.Entity = null;
						previousValue.PhanQuyenNhoms.Remove(this);
					}
					this._NhomNhanVien.Entity = value;
					if ((value != null))
					{
						value.PhanQuyenNhoms.Add(this);
						this._MaNhomNV = value.MaNhomNV;
					}
					else
					{
						this._MaNhomNV = default(string);
					}
					this.SendPropertyChanged("NhomNhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhap")]
	public partial class PhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPN;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private string _MaNV;
		
		private string _TinhTrangNhap;
		
		private EntitySet<ChiTietPhieuNhap> _ChiTietPhieuNhaps;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPNChanging(string value);
    partial void OnMaPNChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTinhTrangNhapChanging(string value);
    partial void OnTinhTrangNhapChanged();
    #endregion
		
		public PhieuNhap()
		{
			this._ChiTietPhieuNhaps = new EntitySet<ChiTietPhieuNhap>(new Action<ChiTietPhieuNhap>(this.attach_ChiTietPhieuNhaps), new Action<ChiTietPhieuNhap>(this.detach_ChiTietPhieuNhaps));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPN
		{
			get
			{
				return this._MaPN;
			}
			set
			{
				if ((this._MaPN != value))
				{
					this.OnMaPNChanging(value);
					this.SendPropertyChanging();
					this._MaPN = value;
					this.SendPropertyChanged("MaPN");
					this.OnMaPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangNhap", DbType="NVarChar(50)")]
		public string TinhTrangNhap
		{
			get
			{
				return this._TinhTrangNhap;
			}
			set
			{
				if ((this._TinhTrangNhap != value))
				{
					this.OnTinhTrangNhapChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangNhap = value;
					this.SendPropertyChanged("TinhTrangNhap");
					this.OnTinhTrangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChiTietPhieuNhap", Storage="_ChiTietPhieuNhaps", ThisKey="MaPN", OtherKey="MaPN")]
		public EntitySet<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this._ChiTietPhieuNhaps;
			}
			set
			{
				this._ChiTietPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhap", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuNhaps.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuNhaps.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = this;
		}
		
		private void detach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangHuy")]
	public partial class BangHuy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHuy;
		
		private string _MaNV;
		
		private string _LyDoHuy;
		
		private System.Nullable<System.DateTime> _NgayHuy;
		
		private EntitySet<ChiTietHuy> _ChiTietHuys;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHuyChanging(string value);
    partial void OnMaHuyChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnLyDoHuyChanging(string value);
    partial void OnLyDoHuyChanged();
    partial void OnNgayHuyChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHuyChanged();
    #endregion
		
		public BangHuy()
		{
			this._ChiTietHuys = new EntitySet<ChiTietHuy>(new Action<ChiTietHuy>(this.attach_ChiTietHuys), new Action<ChiTietHuy>(this.detach_ChiTietHuys));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHuy", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHuy
		{
			get
			{
				return this._MaHuy;
			}
			set
			{
				if ((this._MaHuy != value))
				{
					this.OnMaHuyChanging(value);
					this.SendPropertyChanging();
					this._MaHuy = value;
					this.SendPropertyChanged("MaHuy");
					this.OnMaHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LyDoHuy", DbType="NVarChar(MAX)")]
		public string LyDoHuy
		{
			get
			{
				return this._LyDoHuy;
			}
			set
			{
				if ((this._LyDoHuy != value))
				{
					this.OnLyDoHuyChanging(value);
					this.SendPropertyChanging();
					this._LyDoHuy = value;
					this.SendPropertyChanged("LyDoHuy");
					this.OnLyDoHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHuy", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHuy
		{
			get
			{
				return this._NgayHuy;
			}
			set
			{
				if ((this._NgayHuy != value))
				{
					this.OnNgayHuyChanging(value);
					this.SendPropertyChanging();
					this._NgayHuy = value;
					this.SendPropertyChanged("NgayHuy");
					this.OnNgayHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangHuy_ChiTietHuy", Storage="_ChiTietHuys", ThisKey="MaHuy", OtherKey="MaHuy")]
		public EntitySet<ChiTietHuy> ChiTietHuys
		{
			get
			{
				return this._ChiTietHuys;
			}
			set
			{
				this._ChiTietHuys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangHuy", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.BangHuys.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.BangHuys.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHuys(ChiTietHuy entity)
		{
			this.SendPropertyChanging();
			entity.BangHuy = this;
		}
		
		private void detach_ChiTietHuys(ChiTietHuy entity)
		{
			this.SendPropertyChanging();
			entity.BangHuy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHuy")]
	public partial class ChiTietHuy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHuy;
		
		private string _MaSP;
		
		private System.Nullable<int> _SoLuongHuy;
		
		private EntityRef<BangHuy> _BangHuy;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHuyChanging(string value);
    partial void OnMaHuyChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongHuyChanging(System.Nullable<int> value);
    partial void OnSoLuongHuyChanged();
    #endregion
		
		public ChiTietHuy()
		{
			this._BangHuy = default(EntityRef<BangHuy>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHuy", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHuy
		{
			get
			{
				return this._MaHuy;
			}
			set
			{
				if ((this._MaHuy != value))
				{
					if (this._BangHuy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHuyChanging(value);
					this.SendPropertyChanging();
					this._MaHuy = value;
					this.SendPropertyChanged("MaHuy");
					this.OnMaHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongHuy", DbType="Int")]
		public System.Nullable<int> SoLuongHuy
		{
			get
			{
				return this._SoLuongHuy;
			}
			set
			{
				if ((this._SoLuongHuy != value))
				{
					this.OnSoLuongHuyChanging(value);
					this.SendPropertyChanging();
					this._SoLuongHuy = value;
					this.SendPropertyChanged("SoLuongHuy");
					this.OnSoLuongHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangHuy_ChiTietHuy", Storage="_BangHuy", ThisKey="MaHuy", OtherKey="MaHuy", IsForeignKey=true)]
		public BangHuy BangHuy
		{
			get
			{
				return this._BangHuy.Entity;
			}
			set
			{
				BangHuy previousValue = this._BangHuy.Entity;
				if (((previousValue != value) 
							|| (this._BangHuy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BangHuy.Entity = null;
						previousValue.ChiTietHuys.Remove(this);
					}
					this._BangHuy.Entity = value;
					if ((value != null))
					{
						value.ChiTietHuys.Add(this);
						this._MaHuy = value.MaHuy;
					}
					else
					{
						this._MaHuy = default(string);
					}
					this.SendPropertyChanged("BangHuy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHuy", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietHuys.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietHuys.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
